import json
from pyrogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from bot.plugins.dev import shell_exec
from bot import app
from pyrogram import filters
from info import COMMAND_HANDLER
from bot.utils.decorator import capture_err

DATA = {}

async def extract_subtitle(client, message, data):
    await message.edit_text("Extracting Stream from file")
    link = data['link']
    out_loc = "MissKatySub.srt"
    out = (await shell_exec(f"ffmpeg -i {link} -map 0:{data['map']} {out_loc}"))[0]
    await client.send_document(
          chat_id=message.chat.id,
          document=out_loc,
          caption="Generated by @MissKatyRoBot",
    )
    
@app.on_callback_query(filters.regex('^subtitle'))
async def extsubcallback(client, query):
    await query.answer()
    try:
       stream_type, mapping, keyword = query.data.split('_')
       data = DATA[keyword][int(mapping)
       await query.message.edit_text("**Extracting Subtitle, Harap jangan spam bot..**")  
       await extract_subtitle(client, query.message, data)
    except:
       await query.message.edit_text("**Details Not Found**")

@capture_err
@app.on_message(filters.command(["extractsub"], COMMAND_HANDLER))
async def extractsub(_, msg):
    link = msg.text.split()[1]
    pesan = await msg.reply("Processing...")
    res = (await shell_exec(f"ffprobe -loglevel 0 -print_format json -show_format -show_streams {link}"))[0]
    details = json.loads(res)
    buttons = []
    DATA[f"{msg.chat.id}-{pesan.id}"] = {}
    for stream in details["streams"]:
      mapping = stream['index']
      stream_name = stream['codec_name']
      stream_type = stream['codec_type']
      if stream_type in ("audio", "subtitle"):
        pass
      else:
        continue
      try:
        lang = stream["tags"]["language"]
      except:
         lang = mapping
      DATA[f"{msg.chat.id}-{pesan.id}"][int(mapping)] = {
              "map" : mapping,
              "name" : stream_name,
              "type" : stream_type,
              "lang" : lang,
              "link" : link
      }
      buttons.append([
              InlineKeyboardButton(
                  text=f"{stream_type.upper()} - {str(lang).upper()}", callback_data=f"{stream_type}_{mapping}_{msg.chat.id}-{pesan.id}"
              )
      ])

    buttons.append([
          InlineKeyboardButton(text="Ga Jadi", callback_data=f"cancel_{mapping}_{msg.chat.id}-{pesan.id}")
    ])
    await pesan.edit_text(
          "**Select the Stream to be Extracted...**",
          reply_markup=InlineKeyboardMarkup(buttons)
    )
